name: basic
on:
  push:
    branches:
      - main
    tags:
      - "v*.*.*"
  pull_request:
    branches:
      - main
jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - run: echo "Lint Check...ok"
  format:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - run: echo "Format Check...ok"
  test:
    name: Test
    runs-on: ubuntu-latest
    needs: [lint, format]
    steps:
      - run: echo "Test...ok"
  post-status:
    name: Post Status for Other Jobs
    needs: [lint, format, test]
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo "Post Status...ok"
          echo "State of lint: ${{ needs.lint.result }}"
          echo "State of format: ${{ needs.format.result }}"
          echo "State of test: ${{ needs.test.result }}"
  set-output:
    name: Set Output for Ref
    runs-on: ubuntu-latest
    needs: [lint, format, test]
    outputs:
      ref: ${{ steps.set-ref.outputs.ref }}
      is_tag: ${{ steps.set-ref.outputs.is_tag }}
    steps:
      - name: Determine if Ref is a Tag
        id: set-ref
        run: |
          echo "ref=${GITHUB_REF}" >> $GITHUB_OUTPUT
          if [[ "${GITHUB_REF}" =~ ^refs/tags/ ]]; then
            echo "is_tag=true" >> $GITHUB_OUTPUT
          else
            echo "is_tag=false" >> $GITHUB_OUTPUT
          fi
          echo "cat ${GITHUB_OUTPUT}"
          cat $GITHUB_OUTPUT
  set-workflow-artifact:
    name: Set workflow artifact
    runs-on: ubuntu-latest
    needs: set-output
    steps:
      - name: Create artifact
        run: |
          echo "Creating artifact..."
          echo "ref=$REF"
          echo "is_tag=$IS_TAG"

          echo "ref=$REF" >> status.dat
          echo "is_tag=$IS_TAG" >> status.dat
        env:
          REF: ${{ needs.set-output.outputs.ref }}
          IS_TAG: ${{ needs.set-output.outputs.is_tag }}
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: status-${{ github.run_id }}
          path: status.dat
  coverage:
    name: Generate Coverage Report
    needs: test
    runs-on: ubuntu-latest
    steps:
      - run: echo "Generate Coverage Report...ok"
